#include "evdservices_lbne.fcl"

process_name: EVD

services:
{
  message:      @local::evd_message
  user:         @local::lbne35t_disp
}

services.user.RecoDrawingOptions.HitModuleLabels:  [ "hitcheat" ]
services.user.RecoDrawingOptions.ClusterModuleLabels:  [ "pandora" ]
services.user.RecoDrawingOptions.TrackModuleLabels:  [ "particlestitcher" ]
services.user.RecoDrawingOptions.WireModuleLabels:  [ ]
services.user.RecoDrawingOptions.DrawHits:  1
services.user.RecoDrawingOptions.DrawClusters:  1
services.user.RecoDrawingOptions.DrawBezierTracks:  1
#services.user.RecoDrawingOptions.BezierTrackModuleLabels:  [ "particlestitcher" ]
services.user.RawDrawingOptions.DrawRawDataOrCalibWires:    1
services.user.RawDrawingOptions.TPC: 1  #TPC 1 is the main drift volume in 35t
# Define the services

#Look at the input files
source:
{
  module_type: RootInput
  fileNames:  [ "single_gen.root" ]
  maxEvents:   -1       # Number of events to create
}

outputs:{}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers: {}

 filters:{}

 analyzers:
 {
  evdisp:{module_type: EVD}
 }
 
 #list the modules for this path, order matters, filters reject all following items
 evd: [ evdisp ] 

 #end_path are things that do not modify art::Event, includes analyzers 
 #and output modules. all items here can be run simultaneously
 end_paths: [evd]  
}
