#include "services_lbne.fcl"

process_name: LArValRec

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "ntuple.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  user:         @local::lbne35t_services
}


### Define input file format
source:
{
  module_type: RootInput
}

### Define output file format
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "standard_valrec.root" #default file name, can override from command line with -o or --output
   dataTier:    "full-reconstructed"
 }
}

### Define the modules and create chains
physics:
{
  producers:{
	mktracks: {
	        module_type:		BuildTracksFromAllPFOs
    		RecoModuleName:		pandora
    		StitcherModuleName: 	particlestitcher
		}
	}		
  analyzers:{
	valrec: {
    		module_type:		LArValidateReco
    		Variables: 		[Analysis,Validation]
    		TreeName: 		valrec
    		SimModuleName:		largeant
    		RecoModuleName: 	pandora
    		HitModuleName: 		hit35t
    		StitcherModuleName: 	mktracks
   	}    				
  }

  ### Set up a chain of Producer modules
  reco: [ mktracks ]

  ### Set up the output stream
  stream1: [ valrec ]

  ### Set up the trigger paths (these are the modules that modify the event) 
  trigger_paths: [ reco ] 

  ### Set up the end paths (these are the modules that do not modify the event)
  end_paths: [ stream1 ]
}
